import SCons.Warnings, os, sys, platform

SCons.Warnings.suppressWarningClass(SCons.Warnings.VisualCMissingWarning)

env = Environment(
	ENV={"PATH":os.environ['PATH']}
	, tools=['mingw']
)
env['ENV']['TMP'] = os.environ['TMP']
env['XLW'] = "#/xlw"

print "XLW =",env['XLW']

XLL64 = False
libxlw_path = "$XLW/lib"
libxlw_name = 'xlw'
if XLL64:
	libxlw_path = "$XLW/lib/x64"

env.Append(
	CPPPATH=["$XLW/include",".."]
	,LIBPATH=[libxlw_path]
	,LINKFLAGS=['-shared','-static','-s','-static-libgcc','-static-libstdc++']
	,LIBS=['user32']
)

conf = env.Configure()
if not conf.CheckCXXHeader('xlw/xlw.h'):
	print 'ERROR: xlw/xlw.h not found, XLL interface will not be compiled.'
	Exit(1)
if not conf.CheckLib(libxlw_name):
	print 'ERROR:',libxlw_name,'not found, XLL interface will not be compiled.'
	Exit(1)

hasXlw = False
env = conf.Finish()

#fsconfig = "\"" + env.WhereIs('freesteam-config') + "\""
#fsconfig = r'''"c:\Program Files (x86)\freesteam\freesteam-config"'''
#print "fsconfig=",fsconfig
#env.ParseConfig([sys.executable,fsconfig,'--libs','--cppflags'])

fssrcs = ['../zeroin.c','../viscosity.c','../surftens.c','../thcond.c'
	,'../steam_pT.c', '../steam.c', '../region4.c', '../region3.c'
	, '../region2.c', '../region1.c', '../common.c', '../b23.c'
	, '../steam_ph.c','../steam_ps.c', '../steam_Ts.c', '../backwards.c'
	, '../steam_pv.c', '../bounds.c']

env['SHLIBSUFFIX'] = ".xll"
env['SHLIBPREFIX'] = ""

env.Command('xlwWrapper.cpp','cppinterface.h',"xlw\\xlw_ifgen.exe $SOURCE $TARGET")

env.SharedLibrary("freesteam",fssrcs + ['fstm_pT.cpp','fstm_Ts.cpp','fstm_ps.cpp','fstm_ph.cpp','fstm_pv.cpp','fstm_sat.cpp','xlwWrapper.cpp'])

