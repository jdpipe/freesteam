#* 
	freesteam stream integration for use in steam system calculations
	
	Based on steam.mso by Rafael de Pelegrini Soares,

	Copyright 2002-2005 Rafael de Pelegrini Soares.
	Modified by John Pye 2005 http://freesteam.sf.net
	
	This copyright statement must not be deleted and must be
	included in any modification or adaptation of this Model.
*#

using "newtypes";

#*
	Properties of steam

	The only relationship kept is h = u + pv
	All others are remaining to be related, according to the requirements of the model
	which is derived from this one.
*#
Model Steam_Base
	
	PARAMETERS

	T as AbsoluteTemperature(
		Unit = "K"
		, Default = 600
		, Lower   = 273.15
		, Upper   = 1073.15
	);

	p as Pressure( # Pa
		Lower   = 0
		, Upper = 100
		, Default = 10
	);
	
	x as Quality;
	
	h as SpecificEnthalpy(
		Lower=0
		, Upper=1e4
		, Default=4000
	);
	
	s as SpecificEntropy(
		Lower=0
		, Upper=10
		, Default=7
	);
	
	rho as Density(
		Default = 10
	);
	
	v as SpecificVolume(
	    Lower=0
		, Upper=1100
		, Default=0.1
	);
	
	u as SpecificInternalEnergy(
		Lower=0
		, Upper = 3800
	    , Default = 2200
		, Unit = "kJ/kg"
	);
	
	EQUATIONS
	h = u + p * v;
	rho = 1 / v;

end


#*
	Basic model for a water/steam stream.

	This model only defines the variables of a stream.
	It can be extended for use with any models where at least the following variables are required.
*#
Model SteamStream_Base as Steam_Base
	
	VARIABLES
	mdot as MassFlowRate;

end


#** 
	General steam stream model

	If you specify parameters in terms other than p,s then solver will work out what p,s are by solving
*#
Model SteamStream_ps as SteamStream_Base
	
	PARAMETERS
	ext freesteam as CalcObject(Brief="Steam Physical Properties");
	
	EQUATIONS
	"Steam properties"
	[T, s, v, x] = freesteam.Tsvx_ph(p,h);
	
end


#** 
	Basic steam equipment item with one inlet and outlet stream.
*#
Model SteamEquipment

	PARAMETERS
	ext freesteam as CalcObject(Brief="Steam Physical Properties");

	VARIABLES
in	In  as SteamStream_Base;
out	Out as SteamStream_Base;	
end


#* 
	Ideal (isentropic) turbine
*#
Model Turbine_Ideal as SteamEquipment

	VARIABLES
	P     as Power(Brief="Turbine Power");

	EQUATIONS
	"Mass Balance"
	In.mdot = Out.mdot;
	
	"Turbine power"
	P = In.mdot * (In.h - Out.h);
	
	"Isentropic constraint"
	Out.s = In.s;

	"Outlet properties"
	[Out.T, Out.s, Out.v, Out.x] = freesteam.Tsvx_ph(Out.p, Out.h);
end


#* 
	Turbine (non-isentropic, with efficiency specified)
*#
Model Turbine as SteamEquipment

	VARIABLES
	eta as Efficiency(Brief="Tubine efficiency");
	P as Power;
	
	EQUATIONS
	"Mass Balance"
	In.mdot = Out.mdot;
	
	"Potency"
	P = In.mdot * (In.h - Out.h);
	
	"Efficiency"
	(Out.h - In.h) = eta * (freesteam.h_ps(Out.p, In.s) - In.h);

	"Outlet properties"
	[Out.T, Out.s, Out.v, Out.x] = freesteam.Tsvx_ph(Out.p, Out.h);
end

#*	Steam Condenser.

	This model receives one In strem from which a quantity of heat q
	is removed.

	Specification for this model can be q or dt. The specification of q
	should be prefered, once a bad specificafion of dt can lead singular
	systems (infinite solutions if the Out stream became saturated).
*#
Model Condenser as SteamEquipment
	
	VARIABLES
	q	as HeatRate(Brief="Heat removed from the stream");
	DT  as Temperature(Brief="Temperature difference");

	EQUATIONS
	"Mass balance"
	Out.mdot = In.mdot;
	
	"Energy balance"
	q = (In.h - Out.h) * In.mdot;
	
	"Pressure"
	Out.p = In.p;
	
	"Temperature difference"
	DT = In.T - Out.T;
	
	"Out Stream"
	[Out.T, Out.s, Out.v, Out.x] = freesteam.Tsvx_ph(Out.p, Out.h);

#	GUESS # FIXME: implement GUESS on models!!
#	Out.h = 300 * "kJ/kg";

end

# CondenserPT removed...

#*
	Steam pump

	Includes isentropic efficiency

	You can specify one of the pressures (In or Out) plus P or eta
*#
Model Pump as SteamEquipment
	
	VARIABLES
	P   as Power(Brief="Nominal power");
	eta as Efficiency(Brief="Pump efficiency");
	
	EQUATIONS
	"Mass balance"
	Out.mdot = In.mdot;
	
	"Energy balance"
	P * eta = In.mdot * (Out.p - In.p) * freesteam.v_ps(In.p, In.s);
	
	# FIXME: Volume at In or Out conditions ?
	
	"Efficiency"
	(Out.h - In.h) = eta * (freesteam.h_ps(Out.p, In.s) - In.h);

	"Out Stream"
	[Out.T, Out.s, Out.v, Out.x] = freesteam.Tsvx_ph(Out.p, Out.h);
end

#*
	Isenthalpic throttle
*#
Model Throttle as SteamEquipment

	EQUATIONS
	Out.h = In.h;
	
end

#*
	Boiler

	Specify outlet pressure plus q or outlet temperature
*#
Model Boiler as SteamEquipment
	
	VARIABLES
	q	as HeatRate;

	EQUATIONS
	"Mass balance"
	Out.mdot = In.mdot;

	"Energy balance"
	q = Out.mdot * Out.h - In.mdot * In.h;
	
	"Outlet stream"
	
	# [Out.s, Out.h, Out.x] = freesteam.shx_pT(Out.p, Out.T);
	[Out.T, Out.s, Out.v, Out.x] = freesteam.Tsvx_ph(Out.p, Out.h);
	
#	[Out.T, Out.s, Out.x] = freesteam.StreamPH(Out.P, Out.h);
end

#-------------------------------------------------------------------
# TEST FLOWSHEETS
#
# check that expected values of various stuff are found...
#

FlowSheet TestStreams_ps
	
	PARAMETERS
	freesteam as CalcObject(File="emsofreesteam");
	
	DEVICES
	st as SteamStream_ps;
	
	SPECIFY
	st.mdot = 10 * "kg/s";

	# Region 1 Test Points:
	# (3  MPA, 0.5 kJ/kg/K) -> 307.842 K
	# (80 MPA, 0.5 kJ/kg/K) -> 309.979 K
	# (80 MPA, 3 kJ/kg/K) -> 565.899 K

	# Region 2 Test Points:
	# (0.1  MPA, 7.5 kJ/kg/K) -> 399.517 K
	# (8  MPA, 7.5 kJ/kg/K) -> 1064.95 K
	# (80  MPA, 5.25 kJ/kg/K) -> 854.011 K
	
	st.p = 8 * "MPa";
	st.s = 7.5 * "kJ/kg/K";
	#st.h = 224.224 * "kJ/kg";
	#st.T = 309.979 * "K";
	
	OPTIONS
	relativeAccuracy = 1e-10;
	mode = "steady";
	outputLevel = "all";
end

FlowSheet TestTurbine
	
	PARAMETERS
	freesteam as CalcObject(File="emsofreesteam");
	
	DEVICES
	s as SteamStream_ps;
	#t as TurbineIdeal;
	TU as Turbine;
	
	CONNECTIONS
	s to TU.In;
	
	SPECIFY
	s.mdot = 20000 * "kg/h";
	s.p = 4.32 * "MPa";
	s.T = 670.65 * "K";
	
	TU.eta = .83;
	#t.Out.T = 550 * "K";
	TU.Out.p = 1.569 * "MPa";
	#t.Out.P = 0.1 * "MPa";
	
	OPTIONS
	mode = "steady";
	outputLevel = "all";
end

FlowSheet TestCondenser
	
	PARAMETERS
	freesteam as CalcObject(File="emsofreesteam");
	
	DEVICES
	S as SteamStream_ps;
	CO as Condenser;
	
	CONNECTIONS
	S to CO.In;
	
	SPECIFY
	S.mdot = 20000 * "kg/h";
	S.T = 400 * "K";
	S.p = 2 * "atm";
	
	#cond.q = 45 * "GJ/h";
	CO.DT = 10 * "K";
	
	GUESS 
	# FIXME: this is required when DT is specified instead of q
	# CO.Out.h = 300 * "kJ/kg";
	
	OPTIONS
	mode = "steady";
	outputLevel = "all";
end

FlowSheet TestCondenser_ps
	
	PARAMETERS
	freesteam as CalcObject(File="emsofreesteam");
	
	DEVICES
	s as SteamStream_ps;
	cond as Condenser;
	
	CONNECTIONS
	s to cond.In;
	
	SPECIFY
	s.mdot = 20000 * "kg/h";
	s.T = 300 * "K";
	s.p = 2 * "atm";
	
	#cond.q = 45 * "GJ/h";
	cond.DT = 10 * "K";
	cond.Out.p = 2 * "atm";
	
	OPTIONS
	mode = "steady";
	outputLevel = "all";
end

FlowSheet TestPump
	
	PARAMETERS
	freesteam as CalcObject(File="emsofreesteam");
	
	DEVICES
	s as SteamStream_ps;
	pump as Pump;
	
	CONNECTIONS
	s to pump.In;
	
	SPECIFY
	s.mdot = 20000 * "kg/h";
	s.T = 300 * "K";
	s.p = 2 * "atm";
	
	pump.Out.p = 6 * "atm";
	pump.eta = 0.9;
	
	OPTIONS
	mode = "steady";
	outputLevel = "all";
end

FlowSheet TestGenerator
	
	PARAMETERS
	freesteam as CalcObject(File="emsofreesteam");
	
	DEVICES
	s as SteamStream_ps;
	BO as Boiler;
	
	CONNECTIONS
	s to BO.In;
	
	SPECIFY
	s.mdot = 20000 * "kg/h";
	s.T = 300 * "K";
	s.p = 2 * "atm";
	
	BO.Out.p = 2 * "atm";
	BO.Out.T = 400 * "K";
	
	# BO.q = 50 * "GJ/h";
	
	OPTIONS
	mode = "steady";
	outputLevel = "all";
end

FlowSheet TestCycle
	
	PARAMETERS
	freesteam as CalcObject(File="emsofreesteam");
	
    DEVICES
	TU	as Turbine;                  # 6, 8 = 2
	CO	as Condenser;              # 6, 8 = 2
	PU 	as Pump;                # 6, 8 = 2
	BO	as Boiler; # 5, 7 = 2
	TH  as Throttle;               # 6, 7 = 1
	
	CONNECTIONS # BO -> TU -> CO -> TH -> BO
	BO.Out	to	TU.In;
	TU.Out	to  CO.In;
	CO.Out	to  PU.In;
	PU.Out	to  TH.In;
	TH.In	to	BO.In;
	
	SPECIFY
	# Steam source
	"Boiler mdot"
	BO.In.mdot = 1 * "kg/s";
	"Boiler T_in"
	BO.In.T = 300 * "K";
	"Boiler p_in"
	BO.In.p = 2 * "atm";
	
	# Boiler
	"BO p_out"
	BO.Out.p = 11.3 * "MPa";
	"BO T_out"
	BO.Out.T = (530 + 273.15) * "K";
	#GV.q = 230; # MJ/s

	# Turbine
	#Turb.Pot = 63 * "1000*kW";
	"TU efficiency"
	TU.eta = 0.8;
	"TU p_out"
	TU.Out.p = 0.007 * "MPa";
	
	# Condenser
	"CO T_out"
	CO.Out.T = 300 * "K";
	"CO p_out"
	CO.Out.p = TU.Out.p;

	# Pump
	"PU p_out"
	PU.Out.p = 1 * "MPa";
	#P.p = 0.9 * "1000*kW";
	"PU efficiency"
	PU.eta = 0.7;
	
	GUESS
	#Cond.Out.h = 300 * "kJ/kg";
	#Cond.Out.P = 1 * "atm";

	OPTIONS
	mode = "steady";
	outputLevel = "all";
end
