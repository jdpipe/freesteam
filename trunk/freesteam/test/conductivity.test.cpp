#include "../steamcalculator.h"
#include "../exception.h"
#include "../gridtest.h"

#include <sstream>
#include <iostream>
#include <iomanip>
using namespace std;

class ConductivityTest : public GridTest<Pressure,Temperature,Conductivity>{

	private:

		SteamCalculator *S;
		double tol;

		void testOnePoint(Pressure& p,Temperature& T, Conductivity& k){

			S->set_pT(p,T);

			cerr.flags(ios_base::showbase);
			cerr << "Calculating conductivity at p = " << p << ", T = " << T << endl;
			if(!eq(S->conductivity(),k,tol * W_mK)){

				stringstream s;
				s<< "Conductivity with p = " << p << ", T = " << T << ": expected " << k << ", got " << S->conductivity() << ".";

				CPPUNIT_FAIL("Conductivity isn't right");
			}
		}

	public:

		void setUp(){

			tol = 0.0005;

			const int P_COUNT=29;
			const int T_COUNT=22;

			const double p_raw[P_COUNT]={0.1, 0.5, 1, 2.5, 5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25, 27.5, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100};

			const double T_raw[T_COUNT]={0, 25, 50, 75, 100, 150, 200, 250, 300, 350, 375, 400, 425, 450, 475, 500, 550, 600, 650, 700, 750, 800};

			const double k[P_COUNT][T_COUNT]={
				{561.1,607.2,643.6,666.8,25.08,28.86,33.28,38.17,43.42,48.97,51.83,54.76,57.74,60.77, 63.85,66.98,73.36,79.90,86.57,93.38,100.3,107.3},
				{561.3,607.4,643.8,667.0,679.3,682.1,34.93,39.18,44.09,49.45,52.26,55.14,58.08,61.09, 64.15,67.26,73.61,80.14,86.80,93.60,100.5,107.5},
				{561.6,607.6,644.0,667.2,679.6,682.4,37.21,40.52,44.96,50.07,52.80,55.62,58.52,61.49, 64.52,67.61,73.94,80.44,87.10,93.88,100.8,107.8},
				{562.4,608.3,644.7,668.0,680.4,683.4,664.1,45.16,47.82,52.06,54.53,57.15,59.90,62.75, 65.69,68.71,74.95,81.40,88.02,94.76,101.6,108.5},
				{563.8,609.4,645.9,669.2,681.8,685.1,666.3,622.5,53.85,55.99,57.87,60.06,62.49,65.10, 67.86,70.74,76.79,83.13,89.67,96.35,103.1,109.9},
				{565.2,610.6,647.0,670.5,683.1,686.8,668.5,625.7,63.12,61.05,62.00,63.56,65.54,67.82, 70.33,73.03,78.84,85.04,91.49,98.09,104.8,111.5},
				{566.5,611.7,648.2,671.7,684.5,688.4,670.6,628.8,550.7,68.09,67.34,67.88,69.18,70.99, 73.16,75.61,81.11,87.14,93.48,99.98,106.6,113.2},
				{567.9,612.8,649.4,673.0,685.9,690.1,672.7,631.8,556.2,79.12,74.67,73.39,73.62,74.72, 76.41,78.52,83.61,89.43,95.63,102.0,108.5,115.0},
				{569.3,614.0,650.5,674.2,687.2,691.8,674.9,634.8,561.4,100.8,85.52,80.68,79.12,79.17, 80.18,81.83,86.38,91.92,97.96,104.2,110.6,116.9},
				{570.7,615.1,651.7,675.5,688.6,693.4,676.9,637.7,566.5,452.2,103.6,90.77,86.10,84.52, 84.55,85.58,89.43,94.62,100.5,106.6,112.8,119.0},
				{572.1,616.2,652.8,676.7,689.9,695.1,679.0,640.5,571.3,463.2,141.5,105.5,95.14,91.02, 89.67,89.85,92.78,97.55,103.2,109.1,115.2,121.2},
				{573.4,617.4,654.0,678.0,691.3,696.7,681.1,643.4,575.9,472.6,439.4,128.5,107.1,99.01, 95.66,94.70,96.47,100.7,106.0,111.8,117.7,123.6},
				{574.8,618.5,655.2,679.2,692.6,698.4,683.2,646.1,580.4,481.1,410.9,168.2,123.3,108.9, 102.7,100.2,100.5,104.1,109.1,114.6,120.3,126.0},
				{576.2,619.7,656.3,680.4,694.0,700.0,685.2,648.9,584.7,488.8,425.9,245.5,145.4,121.1, 111.0,106.5,104.9,107.8,112.3,117.6,123.1,128.6},
				{577.5,620.8,657.5,681.7,695.3,701.7,687.2,651.6,588.8,496.0,438.1,332.0,175.8,136.2, 120.7,113.6,109.8,111.7,115.8,120.8,126.0,131.3},
				{580.2,623.1,659.8,684.2,698.0,704.9,691.3,656.8,596.8,509.0,457.3,384.7,257.9,176.5, 145.0,130.7,120.7,120.3,123.2,127.5,132.2,137.0},
				{582.9,625.3,662.1,686.6,700.7,708.2,695.3,662.0,604.3,520.7,472.9,414.2,323.8,227.2, 176.0,151.7,133.4,129.9,131.4,134.8,138.9,143.2},
				{585.6,627.6,664.4,689.1,703.3,711.4,699.2,667.0,611.5,531.5,486.2,434.9,363.6,275.8, 211.5,176.2,147.8,140.5,140.3,142.6,146.0,149.7},
				{588.2,629.8,666.7,691.5,706.0,714.6,703.1,671.9,618.3,541.5,498.2,451.3,391.3,315.5, 247.0,202.9,163.7,152.0,149.7,150.9,153.4,156.5},
				{590.8,632.1,669.0,694.0,708.6,717.8,707.0,676.8,624.9,550.8,509.1,465.2,412.5,346.3, 279.4,230.0,180.6,164.2,159.7,159.6,161.2,163.5},
				{593.3,634.3,671.3,696.4,711.2,721.0,710.9,681.5,631.2,559.6,519.2,477.4,429.7,370.8, 307.9,255.8,198.1,176.9,169.9,168.5,169.1,170.7},
				{595.8,636.5,673.5,698.8,713.9,724.1,714.7,686.2,637.3,568.0,528.7,488.4,444.1,391.0, 332.2,279.7,215.6,189.8,180.4,177.5,177.2,177.9},
				{598.3,638.7,675.8,701.2,716.4,727.2,718.5,690.7,643.2,575.9,537.6,498.5,456.7,408.0, 353.2,301.5,232.8,202.7,190.9,186.5,185.2,185.2},
				{600.7,640.9,678.0,703.6,719.0,730.4,722.2,695.3,648.9,583.4,546.1,507.9,468.0,422.7, 371.5,321.2,249.2,215.3,201.2,195.5,193.2,192.4},
				{603.1,643.0,680.3,705.9,721.6,733.5,726.0,699.7,654.4,590.7,554.2,516.8,478.2,435.6, 387.6,338.9,264.9,227.6,211.4,204.2,201.0,199.5},
				{605.4,645.1,682.5,708.3,724.1,736.6,729.7,704.2,659.8,597.6,561.9,525.2,487.7,447.2, 401.8,354.9,279.7,239.5,221.1,212.7,208.6,206.4},
				{607.7,647.3,684.7,710.6,726.7,739.7,733.4,708.5,665.1,604.3,569.3,533.2,496.5,457.6, 414.6,369.4,293.7,250.8,230.5,220.9,215.9,213.0},
				{610.0,649.3,686.8,712.9,729.2,742.7,737.1,712.9,670.3,610.7,576.4,540.8,504.9,467.2, 426.1,382.7,306.9,261.7,239.5,228.7,222.9,219.4},
				{612.2,651.4,689.0,715.2,731.7,745.8,740.8,717.1,675.3,617.0,583.2,548.2,512.8,476.1, 436.6,394.8,319.3,272.0,248.0,236.0,229.5,225.4}
			};

			try{

				for(int i=0; i<T_COUNT; i++){
					addVector( fromcelsius(T_raw[i]), p_raw, MPa, k[i], mW_mK, P_COUNT);
				}

			}catch(Exception *e){
				stringstream s;
				CPPUNIT_FAIL(e->what());
			}

			//cerr << "TABLE:" << endl;

			//printData();

			S = new SteamCalculator();

		}

		void tearDown(){

			delete S;

			GridTest<Pressure,Temperature,Conductivity>::tearDown();
		}

	public:

		// Invoke CPPUNIT macros to add tests to a suite:

		CPPUNIT_TEST_SUITE(ConductivityTest);
		CPPUNIT_TEST(testAllPoints);
		CPPUNIT_TEST_SUITE_END();

};

CPPUNIT_TEST_SUITE_REGISTRATION(ConductivityTest);
